---

- name: install some packages
  hosts: all
  become: yes
  tasks:
  - name: Install a list of packages
    ansible.builtin.apt:
      update_cache: yes
      autoclean: yes
      pkg:
      - nginx
      - docker.io
      - curl

- name: create deploy user
  become: true
  hosts: webserver
  tasks:
    - ansible.builtin.user:
        name: deploy
        shell: /bin/bash
        groups: docker
        append: yes

    - name: Set authorized key taken from file
      authorized_key:
        user: deploy
        state: present
        key: "{{ lookup('file', './serdarkey.pub') }}"

- name: install jenkins
  hosts: jenkins
  become: yes
  vars:
    jenkins_domain_name: "jenkins-tsserdar.ddns.conf"
  tasks:
  - name: Download foo.conf
    ansible.builtin.get_url:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
      dest: /usr/share/keyrings/jenkins-keyring.asc
    
  - name: add source
    shell: |
      echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
      https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
      /etc/apt/sources.list.d/jenkins.list > /dev/null

  - name: Install a list of packages
    ansible.builtin.apt:
      update_cache: yes
      autoclean: yes
      pkg:
      - default-jre
      - jenkins

  - name: Make sure a service unit is running
    ansible.builtin.systemd:
      daemon_reload: yes
      state: started
      enabled: true
      name: jenkins

  - name: add nginx config
    ansible.builtin.template:
      src: nginx.conf.j2
      dest: /etc/nginx/sites-enabled/default

  
  - name: restart nginx after configuration update
    ansible.builtin.systemd:
      daemon_reload: yes
      state: restarted
      name: nginx

  - name: "Read a file content"
    shell: |
      cat /var/lib/jenkins/secrets/initialAdminPassword
    register: initialAdminPassword

  - name: "Print the file content to a console"
    debug:
      msg: "{{ initialAdminPassword.stdout }}"
